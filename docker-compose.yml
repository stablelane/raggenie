services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "82:82"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf  # Mount custom nginx.conf to container
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]  # Check if Nginx serves the homepage
      interval: 30s                                 # Check every 30 seconds
      retries: 3                                    # Retry 3 times before considering the container unhealthy
      timeout: 10s                                  # Timeout for each check
      start_period: 10s 
    # depends_on:
    #   zitadel:
    #     condition: service_healthy
      # backend:
      #   condition: service_healthy
     
    # networks:
    #   - app_network

  db:
    image: postgres:16-alpine
    environment:
      PGUSER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "zitadel", "-U", "postgres", "||", "exit 1"]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 20s
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    
    # networks:
    #   - app_network

  zitadel:
    user: "${UID:-1000}"
    restart: always
    image: 'ghcr.io/zitadel/zitadel:latest'
    command: 'start-from-init --masterkey "MasterkeyNeedsToHave32Characters" --tlsMode disabled'
    ports:
      - '8080:8080'
    environment:
      ZITADEL_DATABASE_POSTGRES_HOST: db
      ZITADEL_DATABASE_POSTGRES_PORT: 5432
      ZITADEL_DATABASE_POSTGRES_DATABASE: zitadel
      ZITADEL_DATABASE_POSTGRES_USER_USERNAME: zitadel
      ZITADEL_DATABASE_POSTGRES_USER_PASSWORD: zitadel
      ZITADEL_DATABASE_POSTGRES_USER_SSL_MODE: disable
      ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME: postgres
      ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD: postgres
      ZITADEL_DATABASE_POSTGRES_ADMIN_SSL_MODE: disable
      ZITADEL_EXTERNALSECURE: "false"
      ZITADEL_EXTERNALDOMAIN: "app.raggenie.com"
      ZITADEL_EXTERNALPORT: "82"
      ZITADEL_FIRSTINSTANCE_MACHINEKEYPATH: /machinekey/zitadel-admin-sa.json
      ZITADEL_FIRSTINSTANCE_ORG_MACHINE_MACHINE_USERNAME: zitadel-admin-sa
      ZITADEL_FIRSTINSTANCE_ORG_MACHINE_MACHINE_NAME: Admin
      ZITADEL_FIRSTINSTANCE_ORG_MACHINE_MACHINEKEY_TYPE: 1
    depends_on:
      db:
        condition: service_healthy
      # nginx:
      #   condition: service_healthy
    volumes:
      - ./machinekey:/machinekey
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080/ui/console || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    # networks:
    #   - app_network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '8001:8001'
    volumes:
      - ./raggenie.db:/app/raggenie.db
      - ./assets:/app/assets
      - ./chromadb:/app/chromadb
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - ZITADEL_TOKEN_URL=http://app.raggenie.com:82/oauth/v2/token
      - ZITADEL_DOMAIN=http://app.raggenie.com:82
      - APP_SERVER=http://app.raggenie.com
      - CLIENT_PRIVATE_KEY_FILE_PATH=machinekey/zitadel-admin-sa.json
    command: 'python3 main.py --config ./config.yaml llm'
    # depends_on:
    #   db:
    #     condition: service_healthy
    #   zitadel:
    #     condition: service_healthy
    # networks:
    #   - app_network



  # ubuntu-service:
  #   image: ubuntu:latest
  #   container_name: ubuntu-container
  #   stdin_open: true       # Keeps the container open for interactive input
  #   tty: true              # Allocates a pseudo-TTY
  #   command: /bin/bash 
    # networks:
    #   - app_network

# networks:
#   app_network:
#     driver: bridge