# Define the user and worker processes
user  nginx;
worker_processes  auto;

# Set the error log and pid file locations
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

# Load additional modules if necessary (uncomment if you have modules to load)
# include /etc/nginx/modules/*.conf;

# Main HTTP block

events {}
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Access and error log
    access_log /var/log/nginx/access.log;
   

    # Sendfile is used to serve static files more efficiently
    # sendfile        on;
    # tcp_nopush      on;
    # tcp_nodelay     on;
    # keepalive_timeout  65;
    # types_hash_max_size 2048;

    # Enable Gzip compression
    # gzip  on;
    # gzip_disable "msie6";



    upstream zitadel {
        server zitadel:8080;  # This references the 'zitedal' service by its name and internal port 8080
    }

    upstream backend {
        server backend:8001;  # This references the 'backend' service by its name and internal port 8080
    }


    # Server block for HTTP (port 80)
    server {
        listen       80;                                                                                                                                                                                                                                                                 
        client_max_body_size 10M;  # Set to 10 MB or your desired size                                                                                                                                                                                                           
        # server_name  20.84.41.108;

        # Set the root directory for static files
        root   /usr/share/nginx/html;
        index  index.html index.htm;

        # Define the locationht of the main server
        # location / {
        #     try_files $uri $uri/ =404;
        # }

        location /api/ {
            proxy_pass http://backend/api/;  # Forward to ZiteDal
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        location / {
            proxy_pass http://backend;  # Forward to ZiteDal
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

       

        # API URL: Proxy requests to the Backend service
        # location /api/ {
        #     proxy_pass http://backend;  # Forward to Backend
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        # }

        # Handle 404 errors for any unknown routes
        error_page 404 /404.html;
        location = /404.html {
            root /usr/share/nginx/html;
        }

        # Handle 50x errors
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    server {
        listen       82;
        # server_name  20.84.41.108;

        # Set the root directory for static files
        root   /usr/share/nginx/html;
        index  index.html index.htm;

        # Define the locationht of the main server
        # location / {
        #     try_files $uri $uri/ =404;
        # }

        location /ui/ {
            proxy_pass http://zitadel/ui/;  # Forward to ZiteDal
            proxy_set_header Host $host:$server_port;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /oauth/ {
            proxy_pass http://zitadel/oauth/;  # Forward to ZiteDal
            proxy_set_header Host $host:$server_port;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
       

        location / {
            proxy_pass http://zitadel/;  # Forward to ZiteDal
            proxy_set_header Host $host:$server_port;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # proxy_set_header X-Forwarded-Uri $request_uri;
        }


        # Handle 404 errors for any unknown routes
        error_page 404 /404.html;
        location = /404.html {
            root /usr/share/nginx/html;
        }

        # Handle 50x errors
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
